{
  "asyncapi": "2.6.0",
  "servers": {
    "kafkaServer": {
      "url": "kafka:9092",
      "protocol": "kafka",
      "description": "Kafka broker"
    }
  },
  "info": {
    "title": "Account Management",
    "description": "Swagger for TMF666 Account Management API",
    "version": "5.0.0"
  },
  "tags": [
    {
      "name": "partyAccount",
      "description": "Operations for PartyAccount Resource"
    },
    {
      "name": "billingAccount",
      "description": "Operations for BillingAccount Resource"
    },
    {
      "name": "settlementAccount",
      "description": "Operations for SettlementAccount Resource"
    },
    {
      "name": "financialAccount",
      "description": "Operations for FinancialAccount Resource"
    },
    {
      "name": "billFormat",
      "description": "Operations for BillFormat Resource"
    },
    {
      "name": "billPresentationMedia",
      "description": "Operations for BillPresentationMedia Resource"
    },
    {
      "name": "billingCycleSpecification",
      "description": "Operations for BillingCycleSpecification Resource"
    }
  ],
  "channels": {
    "{prefix}.accountManagement.v5.listBillFormat.commandRequest": {
      "publish": {
        "description": "List or find BillFormat objects",
        "operationId": "listBillFormatRequest",
        "summary": "List or find BillFormat objects",
        "message": {
          "$ref": "#/components/messages/ListBillFormatRequest"
        },
        "tags": [
          {
            "name": "billFormat"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillFormat.commandReply": {
      "subscribe": {
        "operationId": "listBillFormatReply",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillFormatArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillFormat.commandRequest": {
      "publish": {
        "description": "This operation creates a BillFormat entity.",
        "operationId": "createBillFormatRequest",
        "summary": "Creates a BillFormat",
        "message": {
          "$ref": "#/components/messages/CreateBillFormatJsonRequest"
        },
        "tags": [
          {
            "name": "billFormat"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillFormat.commandReply": {
      "subscribe": {
        "operationId": "createBillFormatReply",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201BillFormatJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillFormat.commandRequest": {
      "publish": {
        "description": "This operation retrieves a BillFormat entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveBillFormatRequest",
        "summary": "Retrieves a BillFormat by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveBillFormatRequest"
        },
        "tags": [
          {
            "name": "billFormat"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillFormat.commandReply": {
      "subscribe": {
        "operationId": "retrieveBillFormatReply",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillFormat_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillFormat.commandRequest": {
      "publish": {
        "description": "This operation updates partially a BillFormat entity.",
        "operationId": "patchBillFormatRequest",
        "summary": "Updates partially a BillFormat",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchBillFormatJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillFormatMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillFormatJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillFormatJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "billFormat"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillFormat.commandReply": {
      "subscribe": {
        "operationId": "patchBillFormatReply",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillFormat_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200BillFormat_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200BillFormat_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200BillFormat_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillFormat.commandRequest": {
      "publish": {
        "description": "This operation deletes a BillFormat entity.",
        "operationId": "deleteBillFormatRequest",
        "summary": "Deletes a BillFormat",
        "message": {
          "$ref": "#/components/messages/DeleteBillFormatRequest"
        },
        "tags": [
          {
            "name": "billFormat"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillFormat.commandReply": {
      "subscribe": {
        "operationId": "deleteBillFormatReply",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillPresentationMedia.commandRequest": {
      "publish": {
        "description": "List or find BillPresentationMedia objects",
        "operationId": "listBillPresentationMediaRequest",
        "summary": "List or find BillPresentationMedia objects",
        "message": {
          "$ref": "#/components/messages/ListBillPresentationMediaRequest"
        },
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillPresentationMedia.commandReply": {
      "subscribe": {
        "operationId": "listBillPresentationMediaReply",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillPresentationMediaArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillPresentationMedia.commandRequest": {
      "publish": {
        "description": "This operation creates a BillPresentationMedia entity.",
        "operationId": "createBillPresentationMediaRequest",
        "summary": "Creates a BillPresentationMedia",
        "message": {
          "$ref": "#/components/messages/CreateBillPresentationMediaJsonRequest"
        },
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillPresentationMedia.commandReply": {
      "subscribe": {
        "operationId": "createBillPresentationMediaReply",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201BillPresentationMediaJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillPresentationMedia.commandRequest": {
      "publish": {
        "description": "This operation retrieves a BillPresentationMedia entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveBillPresentationMediaRequest",
        "summary": "Retrieves a BillPresentationMedia by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveBillPresentationMediaRequest"
        },
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillPresentationMedia.commandReply": {
      "subscribe": {
        "operationId": "retrieveBillPresentationMediaReply",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillPresentationMedia_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillPresentationMedia.commandRequest": {
      "publish": {
        "description": "This operation updates partially a BillPresentationMedia entity.",
        "operationId": "patchBillPresentationMediaRequest",
        "summary": "Updates partially a BillPresentationMedia",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchBillPresentationMediaJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillPresentationMediaMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillPresentationMediaJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillPresentationMediaJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillPresentationMedia.commandReply": {
      "subscribe": {
        "operationId": "patchBillPresentationMediaReply",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillPresentationMedia_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200BillPresentationMedia_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200BillPresentationMedia_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200BillPresentationMedia_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillPresentationMedia.commandRequest": {
      "publish": {
        "description": "This operation deletes a BillPresentationMedia entity.",
        "operationId": "deleteBillPresentationMediaRequest",
        "summary": "Deletes a BillPresentationMedia",
        "message": {
          "$ref": "#/components/messages/DeleteBillPresentationMediaRequest"
        },
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillPresentationMedia.commandReply": {
      "subscribe": {
        "operationId": "deleteBillPresentationMediaReply",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillingAccount.commandRequest": {
      "publish": {
        "description": "List or find BillingAccount objects",
        "operationId": "listBillingAccountRequest",
        "summary": "List or find BillingAccount objects",
        "message": {
          "$ref": "#/components/messages/ListBillingAccountRequest"
        },
        "tags": [
          {
            "name": "billingAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillingAccount.commandReply": {
      "subscribe": {
        "operationId": "listBillingAccountReply",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingAccountArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillingAccount.commandRequest": {
      "publish": {
        "description": "This operation creates a BillingAccount entity.",
        "operationId": "createBillingAccountRequest",
        "summary": "Creates a BillingAccount",
        "message": {
          "$ref": "#/components/messages/CreateBillingAccountJsonRequest"
        },
        "tags": [
          {
            "name": "billingAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillingAccount.commandReply": {
      "subscribe": {
        "operationId": "createBillingAccountReply",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201BillingAccountJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillingAccount.commandRequest": {
      "publish": {
        "description": "This operation retrieves a BillingAccount entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveBillingAccountRequest",
        "summary": "Retrieves a BillingAccount by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveBillingAccountRequest"
        },
        "tags": [
          {
            "name": "billingAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillingAccount.commandReply": {
      "subscribe": {
        "operationId": "retrieveBillingAccountReply",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingAccount_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillingAccount.commandRequest": {
      "publish": {
        "description": "This operation updates partially a BillingAccount entity.",
        "operationId": "patchBillingAccountRequest",
        "summary": "Updates partially a BillingAccount",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchBillingAccountJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingAccountMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingAccountJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingAccountJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "billingAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillingAccount.commandReply": {
      "subscribe": {
        "operationId": "patchBillingAccountReply",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingAccount_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200BillingAccount_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200BillingAccount_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200BillingAccount_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillingAccount.commandRequest": {
      "publish": {
        "description": "This operation deletes a BillingAccount entity.",
        "operationId": "deleteBillingAccountRequest",
        "summary": "Deletes a BillingAccount",
        "message": {
          "$ref": "#/components/messages/DeleteBillingAccountRequest"
        },
        "tags": [
          {
            "name": "billingAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillingAccount.commandReply": {
      "subscribe": {
        "operationId": "deleteBillingAccountReply",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillingCycleSpecification.commandRequest": {
      "publish": {
        "description": "List or find BillingCycleSpecification objects",
        "operationId": "listBillingCycleSpecificationRequest",
        "summary": "List or find BillingCycleSpecification objects",
        "message": {
          "$ref": "#/components/messages/ListBillingCycleSpecificationRequest"
        },
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listBillingCycleSpecification.commandReply": {
      "subscribe": {
        "operationId": "listBillingCycleSpecificationReply",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingCycleSpecificationArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillingCycleSpecification.commandRequest": {
      "publish": {
        "description": "This operation creates a BillingCycleSpecification entity.",
        "operationId": "createBillingCycleSpecificationRequest",
        "summary": "Creates a BillingCycleSpecification",
        "message": {
          "$ref": "#/components/messages/CreateBillingCycleSpecificationJsonRequest"
        },
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createBillingCycleSpecification.commandReply": {
      "subscribe": {
        "operationId": "createBillingCycleSpecificationReply",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201BillingCycleSpecificationJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillingCycleSpecification.commandRequest": {
      "publish": {
        "description": "This operation retrieves a BillingCycleSpecification entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveBillingCycleSpecificationRequest",
        "summary": "Retrieves a BillingCycleSpecification by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveBillingCycleSpecificationRequest"
        },
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveBillingCycleSpecification.commandReply": {
      "subscribe": {
        "operationId": "retrieveBillingCycleSpecificationReply",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingCycleSpecification_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillingCycleSpecification.commandRequest": {
      "publish": {
        "description": "This operation updates partially a BillingCycleSpecification entity.",
        "operationId": "patchBillingCycleSpecificationRequest",
        "summary": "Updates partially a BillingCycleSpecification",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchBillingCycleSpecificationJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingCycleSpecificationMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingCycleSpecificationJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchBillingCycleSpecificationJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchBillingCycleSpecification.commandReply": {
      "subscribe": {
        "operationId": "patchBillingCycleSpecificationReply",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200BillingCycleSpecification_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200BillingCycleSpecification_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200BillingCycleSpecification_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200BillingCycleSpecification_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillingCycleSpecification.commandRequest": {
      "publish": {
        "description": "This operation deletes a BillingCycleSpecification entity.",
        "operationId": "deleteBillingCycleSpecificationRequest",
        "summary": "Deletes a BillingCycleSpecification",
        "message": {
          "$ref": "#/components/messages/DeleteBillingCycleSpecificationRequest"
        },
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteBillingCycleSpecification.commandReply": {
      "subscribe": {
        "operationId": "deleteBillingCycleSpecificationReply",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listFinancialAccount.commandRequest": {
      "publish": {
        "description": "List or find FinancialAccount objects",
        "operationId": "listFinancialAccountRequest",
        "summary": "List or find FinancialAccount objects",
        "message": {
          "$ref": "#/components/messages/ListFinancialAccountRequest"
        },
        "tags": [
          {
            "name": "financialAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listFinancialAccount.commandReply": {
      "subscribe": {
        "operationId": "listFinancialAccountReply",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200FinancialAccountArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createFinancialAccount.commandRequest": {
      "publish": {
        "description": "This operation creates a FinancialAccount entity.",
        "operationId": "createFinancialAccountRequest",
        "summary": "Creates a FinancialAccount",
        "message": {
          "$ref": "#/components/messages/CreateFinancialAccountJsonRequest"
        },
        "tags": [
          {
            "name": "financialAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createFinancialAccount.commandReply": {
      "subscribe": {
        "operationId": "createFinancialAccountReply",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201FinancialAccountJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveFinancialAccount.commandRequest": {
      "publish": {
        "description": "This operation retrieves a FinancialAccount entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveFinancialAccountRequest",
        "summary": "Retrieves a FinancialAccount by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveFinancialAccountRequest"
        },
        "tags": [
          {
            "name": "financialAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveFinancialAccount.commandReply": {
      "subscribe": {
        "operationId": "retrieveFinancialAccountReply",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200FinancialAccount_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchFinancialAccount.commandRequest": {
      "publish": {
        "description": "This operation updates partially a FinancialAccount entity.",
        "operationId": "patchFinancialAccountRequest",
        "summary": "Updates partially a FinancialAccount",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchFinancialAccountJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchFinancialAccountMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchFinancialAccountJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchFinancialAccountJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "financialAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchFinancialAccount.commandReply": {
      "subscribe": {
        "operationId": "patchFinancialAccountReply",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200FinancialAccount_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200FinancialAccount_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200FinancialAccount_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200FinancialAccount_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteFinancialAccount.commandRequest": {
      "publish": {
        "description": "This operation deletes a FinancialAccount entity.",
        "operationId": "deleteFinancialAccountRequest",
        "summary": "Deletes a FinancialAccount",
        "message": {
          "$ref": "#/components/messages/DeleteFinancialAccountRequest"
        },
        "tags": [
          {
            "name": "financialAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteFinancialAccount.commandReply": {
      "subscribe": {
        "operationId": "deleteFinancialAccountReply",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listPartyAccount.commandRequest": {
      "publish": {
        "description": "List or find PartyAccount objects",
        "operationId": "listPartyAccountRequest",
        "summary": "List or find PartyAccount objects",
        "message": {
          "$ref": "#/components/messages/ListPartyAccountRequest"
        },
        "tags": [
          {
            "name": "partyAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listPartyAccount.commandReply": {
      "subscribe": {
        "operationId": "listPartyAccountReply",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200PartyAccountArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createPartyAccount.commandRequest": {
      "publish": {
        "description": "This operation creates a PartyAccount entity.",
        "operationId": "createPartyAccountRequest",
        "summary": "Creates a PartyAccount",
        "message": {
          "$ref": "#/components/messages/CreatePartyAccountJsonRequest"
        },
        "tags": [
          {
            "name": "partyAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createPartyAccount.commandReply": {
      "subscribe": {
        "operationId": "createPartyAccountReply",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201PartyAccountJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrievePartyAccount.commandRequest": {
      "publish": {
        "description": "This operation retrieves a PartyAccount entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrievePartyAccountRequest",
        "summary": "Retrieves a PartyAccount by ID",
        "message": {
          "$ref": "#/components/messages/RetrievePartyAccountRequest"
        },
        "tags": [
          {
            "name": "partyAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrievePartyAccount.commandReply": {
      "subscribe": {
        "operationId": "retrievePartyAccountReply",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200PartyAccount_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchPartyAccount.commandRequest": {
      "publish": {
        "description": "This operation updates partially a PartyAccount entity.",
        "operationId": "patchPartyAccountRequest",
        "summary": "Updates partially a PartyAccount",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchPartyAccountJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchPartyAccountMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchPartyAccountJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchPartyAccountJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "partyAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchPartyAccount.commandReply": {
      "subscribe": {
        "operationId": "patchPartyAccountReply",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200PartyAccount_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200PartyAccount_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200PartyAccount_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200PartyAccount_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deletePartyAccount.commandRequest": {
      "publish": {
        "description": "This operation deletes a PartyAccount entity.",
        "operationId": "deletePartyAccountRequest",
        "summary": "Deletes a PartyAccount",
        "message": {
          "$ref": "#/components/messages/DeletePartyAccountRequest"
        },
        "tags": [
          {
            "name": "partyAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deletePartyAccount.commandReply": {
      "subscribe": {
        "operationId": "deletePartyAccountReply",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listSettlementAccount.commandRequest": {
      "publish": {
        "description": "List or find SettlementAccount objects",
        "operationId": "listSettlementAccountRequest",
        "summary": "List or find SettlementAccount objects",
        "message": {
          "$ref": "#/components/messages/ListSettlementAccountRequest"
        },
        "tags": [
          {
            "name": "settlementAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.listSettlementAccount.commandReply": {
      "subscribe": {
        "operationId": "listSettlementAccountReply",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200SettlementAccountArrayJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createSettlementAccount.commandRequest": {
      "publish": {
        "description": "This operation creates a SettlementAccount entity.",
        "operationId": "createSettlementAccountRequest",
        "summary": "Creates a SettlementAccount",
        "message": {
          "$ref": "#/components/messages/CreateSettlementAccountJsonRequest"
        },
        "tags": [
          {
            "name": "settlementAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.createSettlementAccount.commandReply": {
      "subscribe": {
        "operationId": "createSettlementAccountReply",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/201SettlementAccountJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveSettlementAccount.commandRequest": {
      "publish": {
        "description": "This operation retrieves a SettlementAccount entity. Attribute selection enabled for all first level attributes.",
        "operationId": "retrieveSettlementAccountRequest",
        "summary": "Retrieves a SettlementAccount by ID",
        "message": {
          "$ref": "#/components/messages/RetrieveSettlementAccountRequest"
        },
        "tags": [
          {
            "name": "settlementAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.retrieveSettlementAccount.commandReply": {
      "subscribe": {
        "operationId": "retrieveSettlementAccountReply",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200SettlementAccount_GetJsonReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchSettlementAccount.commandRequest": {
      "publish": {
        "description": "This operation updates partially a SettlementAccount entity.",
        "operationId": "patchSettlementAccountRequest",
        "summary": "Updates partially a SettlementAccount",
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/PatchSettlementAccountJsonRequest"
            },
            {
              "$ref": "#/components/messages/PatchSettlementAccountMergePatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchSettlementAccountJsonPatchRequest"
            },
            {
              "$ref": "#/components/messages/PatchSettlementAccountJsonPatchQueryRequest"
            }
          ]
        },
        "tags": [
          {
            "name": "settlementAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.patchSettlementAccount.commandReply": {
      "subscribe": {
        "operationId": "patchSettlementAccountReply",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/200SettlementAccount_PatchJsonReply"
            },
            {
              "$ref": "#/components/messages/200SettlementAccount_PatchMergePatchReply"
            },
            {
              "$ref": "#/components/messages/200SettlementAccount_PatchJsonPatchReply"
            },
            {
              "$ref": "#/components/messages/200SettlementAccount_PatchJsonPatchQueryReply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteSettlementAccount.commandRequest": {
      "publish": {
        "description": "This operation deletes a SettlementAccount entity.",
        "operationId": "deleteSettlementAccountRequest",
        "summary": "Deletes a SettlementAccount",
        "message": {
          "$ref": "#/components/messages/DeleteSettlementAccountRequest"
        },
        "tags": [
          {
            "name": "settlementAccount"
          }
        ]
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.deleteSettlementAccount.commandReply": {
      "subscribe": {
        "operationId": "deleteSettlementAccountReply",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "oneOf": [
            {
              "$ref": "#/components/messages/204Reply"
            },
            {
              "$ref": "#/components/messages/400JsonReply"
            },
            {
              "$ref": "#/components/messages/401JsonReply"
            },
            {
              "$ref": "#/components/messages/403JsonReply"
            },
            {
              "$ref": "#/components/messages/404JsonReply"
            },
            {
              "$ref": "#/components/messages/405JsonReply"
            },
            {
              "$ref": "#/components/messages/409JsonReply"
            },
            {
              "$ref": "#/components/messages/500JsonReply"
            },
            {
              "$ref": "#/components/messages/501JsonReply"
            },
            {
              "$ref": "#/components/messages/503JsonReply"
            }
          ]
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.billFormat.notificationEvent": {
      "subscribe": {
        "operationId": "billFormatNotification",
        "tags": [
          {
            "name": "billFormat"
          }
        ],
        "message": {
          "$ref": "#/components/messages/BillFormatNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.billPresentationMedia.notificationEvent": {
      "subscribe": {
        "operationId": "billPresentationMediaNotification",
        "tags": [
          {
            "name": "billPresentationMedia"
          }
        ],
        "message": {
          "$ref": "#/components/messages/BillPresentationMediaNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.billingAccount.notificationEvent": {
      "subscribe": {
        "operationId": "billingAccountNotification",
        "tags": [
          {
            "name": "billingAccount"
          }
        ],
        "message": {
          "$ref": "#/components/messages/BillingAccountNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.billingCycleSpecification.notificationEvent": {
      "subscribe": {
        "operationId": "billingCycleSpecificationNotification",
        "tags": [
          {
            "name": "billingCycleSpecification"
          }
        ],
        "message": {
          "$ref": "#/components/messages/BillingCycleSpecificationNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.financialAccount.notificationEvent": {
      "subscribe": {
        "operationId": "financialAccountNotification",
        "tags": [
          {
            "name": "financialAccount"
          }
        ],
        "message": {
          "$ref": "#/components/messages/FinancialAccountNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.partyAccount.notificationEvent": {
      "subscribe": {
        "operationId": "partyAccountNotification",
        "tags": [
          {
            "name": "partyAccount"
          }
        ],
        "message": {
          "$ref": "#/components/messages/PartyAccountNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    },
    "{prefix}.accountManagement.v5.settlementAccount.notificationEvent": {
      "subscribe": {
        "operationId": "settlementAccountNotification",
        "tags": [
          {
            "name": "settlementAccount"
          }
        ],
        "message": {
          "$ref": "#/components/messages/SettlementAccountNotification"
        }
      },
      "parameters": {
        "prefix": {
          "$ref": "#/components/parameters/Prefix"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Prefix": {
        "description": "The prefix.",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "RequestHeaders": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CorrelationHeader"
          },
          {
            "properties": {
              "Reply-Channel": {
                "description": "Name of the channel to send the reply to.",
                "type": "string"
              }
            },
            "required": [
              "Reply-Channel"
            ],
            "type": "object"
          }
        ],
        "type": "object"
      },
      "CorrelationHeader": {
        "properties": {
          "X-Correlation-Id": {
            "description": "Correlation ID set by application",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "X-Correlation-Id"
        ],
        "type": "object"
      },
      "RequestChannel": {
        "properties": {
          "X-Request-Channel": {
            "description": "Channel on which the request was received",
            "type": "string"
          }
        },
        "required": [
          "X-Request-Channel"
        ],
        "type": "object"
      },
      "QueryFilters": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "QueryFiltersHeader": {
        "properties": {
          "Query-Filters": {
            "$ref": "#/components/schemas/QueryFilters"
          }
        },
        "type": "object"
      },
      "XTotalCountHeader": {
        "properties": {
          "X-Total-Count": {
            "type": "integer",
            "description": "Total number of items matching criteria"
          }
        },
        "type": "object"
      },
      "XResultCountHeader": {
        "properties": {
          "X-Result-Count": {
            "type": "integer",
            "description": "Actual number of items returned in the response body"
          }
        },
        "type": "object"
      },
      "IdParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier of the Resource"
          }
        },
        "required": [
          "id"
        ]
      },
      "FieldsParameter": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "string",
            "description": "Comma-separated properties to be provided in response"
          }
        }
      },
      "OffsetParameter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response"
          }
        }
      },
      "LimitParameter": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Requested number of resources to be provided in response"
          }
        }
      },
      "ListBillFormatRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListBillFormatRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListBillFormatRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "StatusCode200Header": {
        "properties": {
          "Status-Code": {
            "const": 200,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode400Header": {
        "properties": {
          "Status-Code": {
            "const": 400,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode401Header": {
        "properties": {
          "Status-Code": {
            "const": 401,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode403Header": {
        "properties": {
          "Status-Code": {
            "const": 403,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode404Header": {
        "properties": {
          "Status-Code": {
            "const": 404,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode405Header": {
        "properties": {
          "Status-Code": {
            "const": 405,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode500Header": {
        "properties": {
          "Status-Code": {
            "const": 500,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode501Header": {
        "properties": {
          "Status-Code": {
            "const": 501,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode503Header": {
        "properties": {
          "Status-Code": {
            "const": 503,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "CreateBillFormatRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateBillFormatRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateBillFormatRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "StatusCode201Header": {
        "properties": {
          "Status-Code": {
            "const": 201,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "StatusCode409Header": {
        "properties": {
          "Status-Code": {
            "const": 409,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "RetrieveBillFormatRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveBillFormatRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveBillFormatRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchBillFormatRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchBillFormatRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchBillFormatRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteBillFormatRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteBillFormatRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteBillFormatRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "StatusCode204Header": {
        "properties": {
          "Status-Code": {
            "const": 204,
            "type": "integer"
          }
        },
        "required": [
          "Status-Code"
        ],
        "type": "object"
      },
      "ListBillPresentationMediaRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListBillPresentationMediaRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListBillPresentationMediaRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreateBillPresentationMediaRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateBillPresentationMediaRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateBillPresentationMediaRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrieveBillPresentationMediaRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveBillPresentationMediaRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveBillPresentationMediaRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchBillPresentationMediaRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchBillPresentationMediaRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchBillPresentationMediaRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteBillPresentationMediaRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteBillPresentationMediaRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteBillPresentationMediaRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "ListBillingAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListBillingAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListBillingAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreateBillingAccountRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateBillingAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateBillingAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrieveBillingAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveBillingAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveBillingAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchBillingAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchBillingAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchBillingAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteBillingAccountRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteBillingAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteBillingAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "ListBillingCycleSpecificationRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListBillingCycleSpecificationRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListBillingCycleSpecificationRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreateBillingCycleSpecificationRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateBillingCycleSpecificationRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateBillingCycleSpecificationRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrieveBillingCycleSpecificationRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveBillingCycleSpecificationRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveBillingCycleSpecificationRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchBillingCycleSpecificationRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchBillingCycleSpecificationRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchBillingCycleSpecificationRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteBillingCycleSpecificationRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteBillingCycleSpecificationRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteBillingCycleSpecificationRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "ListFinancialAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListFinancialAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListFinancialAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreateFinancialAccountRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateFinancialAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateFinancialAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrieveFinancialAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveFinancialAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveFinancialAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchFinancialAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchFinancialAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchFinancialAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteFinancialAccountRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteFinancialAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteFinancialAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "ListPartyAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListPartyAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListPartyAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreatePartyAccountRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreatePartyAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreatePartyAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrievePartyAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrievePartyAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrievePartyAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchPartyAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchPartyAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchPartyAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeletePartyAccountRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeletePartyAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeletePartyAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "ListSettlementAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldsParameter"
          },
          {
            "$ref": "#/components/schemas/OffsetParameter"
          },
          {
            "$ref": "#/components/schemas/LimitParameter"
          }
        ]
      },
      "ListSettlementAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/ListSettlementAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "CreateSettlementAccountRequestParameters": {
        "$ref": "#/components/schemas/FieldsParameter"
      },
      "CreateSettlementAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/CreateSettlementAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "RetrieveSettlementAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "RetrieveSettlementAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/RetrieveSettlementAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "PatchSettlementAccountRequestParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdParameter"
          },
          {
            "$ref": "#/components/schemas/FieldsParameter"
          }
        ]
      },
      "PatchSettlementAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/PatchSettlementAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "DeleteSettlementAccountRequestParameters": {
        "$ref": "#/components/schemas/IdParameter"
      },
      "DeleteSettlementAccountRequestParametersHeader": {
        "properties": {
          "Parameters": {
            "$ref": "#/components/schemas/DeleteSettlementAccountRequestParameters"
          }
        },
        "required": [
          "Parameters"
        ],
        "type": "object"
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account, or other type of account supported by the API.",
            "properties": {
              "creditLimit": {
                "$ref": "#/components/schemas/Money"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time that the account was last updated"
              },
              "name": {
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                },
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs"
              },
              "taxExemption": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxExemptionCertificate"
                },
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account."
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact"
                },
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments"
              },
              "accountBalance": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance"
                },
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance."
              },
              "accountRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountRelationship"
                },
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AccountBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Balances linked to the account",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the balance within list of the balances (for entities with list)"
              },
              "amount": {
                "$ref": "#/components/schemas/Money"
              },
              "balanceType": {
                "type": "string",
                "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AccountBalance_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Balances linked to the account",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the balance within list of the balances (for entities with list)"
              },
              "amount": {
                "$ref": "#/components/schemas/Money"
              },
              "balanceType": {
                "type": "string",
                "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "required": [
              "amount",
              "balanceType",
              "validFor"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "AccountBalance_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "Balances linked to the account",
            "properties": {
              "amount": {
                "$ref": "#/components/schemas/Money"
              },
              "balanceType": {
                "type": "string",
                "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AccountRef": {
        "type": "object",
        "description": "Account reference. A account may be a party account or a financial account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "AccountRef_FVO": {
        "type": "object",
        "description": "Account reference. A account may be a party account or a financial account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "AccountRef_MVO": {
        "type": "object",
        "description": "Account reference. A account may be a party account or a financial account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "AccountRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account.",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "account": {
                "$ref": "#/components/schemas/AccountRef"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AccountRelationship_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account.",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "account": {
                "$ref": "#/components/schemas/AccountRef_FVO"
              }
            },
            "required": [
              "relationshipType"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "AccountRelationship_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account.",
            "properties": {
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "account": {
                "$ref": "#/components/schemas/AccountRef_MVO"
              }
            },
            "required": [
              "relationshipType"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "Account_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account, or other type of account supported by the API.",
            "properties": {
              "creditLimit": {
                "$ref": "#/components/schemas/Money"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the account"
              },
              "lastUpdate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time that the account was last updated"
              },
              "name": {
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
                },
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs"
              },
              "taxExemption": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxExemptionCertificate_FVO"
                },
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account."
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact_FVO"
                },
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments"
              },
              "accountBalance": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountBalance_FVO"
                },
                "description": "List of balances for the account, for example regular postpaid balance, deposit balance, write-off balance."
              },
              "accountRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountRelationship_FVO"
                },
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account"
              }
            },
            "required": [
              "name",
              "relatedParty"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "Account_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Generic Account structure used to define commonalities between sub concepts of PartyAccount and Financial Account, or other type of account supported by the API.",
            "properties": {
              "creditLimit": {
                "$ref": "#/components/schemas/Money"
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the account"
              },
              "name": {
                "type": "string",
                "description": "Name of the account"
              },
              "state": {
                "type": "string",
                "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
              },
              "accountType": {
                "type": "string",
                "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
              },
              "relatedParty": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
                },
                "description": "List of parties that have some relationship with the account, for example the customer to whom the account belongs"
              },
              "taxExemption": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxExemptionCertificate_MVO"
                },
                "description": "List of tax exemptions that can be applied when calculating charges levied to the account."
              },
              "contact": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Contact_MVO"
                },
                "description": "List of people who could be contacted regarding the account, for example the accountant who authorizes payments"
              },
              "accountRelationship": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountRelationship_MVO"
                },
                "description": "List of balances related to the account. For example a list of billing accounts that contribute to a financial account"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "Addressable": {
        "type": "object",
        "description": "Base schema for addressable entities",
        "properties": {
          "href": {
            "type": "string",
            "description": "Hyperlink reference"
          },
          "id": {
            "type": "string",
            "description": "unique identifier"
          },
          "topicRef": {
            "type": "string",
            "description": "A reference to the topic from which this entity can be fetched"
          }
        }
      },
      "Addressable_MVO": {
        "type": "object",
        "description": "Base schema for addressable entities"
      },
      "Attachment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the attachment"
              },
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment",
                "example": "Photograph of the Product"
              },
              "url": {
                "type": "string",
                "description": "Uniform Resource Locator, is a web page address (a subset of URI)",
                "example": "https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
              },
              "content": {
                "type": "string",
                "format": "base64",
                "description": "The actual contents of the attachment object, if embedded, encoded as base64"
              },
              "size": {
                "$ref": "#/components/schemas/Quantity"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "attachmentType": {
                "type": "string",
                "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
              },
              "mimeType": {
                "type": "string",
                "description": "a technical characterization of the attachment content format using IETF Mime Types"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "description": "Link to the attachment media/content",
                "type": "string"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRefOrValue": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Attachment"
          },
          {
            "$ref": "#/components/schemas/AttachmentRef"
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRefOrValue_FVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Attachment_FVO"
          },
          {
            "$ref": "#/components/schemas/AttachmentRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRefOrValue_MVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the Attachment entity and not the AttachmentRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Attachment_MVO"
          },
          {
            "$ref": "#/components/schemas/AttachmentRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "description": "Link to the attachment media/content",
                "type": "string"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "AttachmentRef_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          },
          {
            "type": "object",
            "description": "Attachment reference. An attachment complements the description of an element (for instance a product) through video, pictures",
            "properties": {
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment"
              },
              "url": {
                "description": "Link to the attachment media/content",
                "type": "string"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "Attachment_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the attachment"
              },
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment",
                "example": "Photograph of the Product"
              },
              "url": {
                "type": "string",
                "description": "Uniform Resource Locator, is a web page address (a subset of URI)",
                "example": "https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
              },
              "content": {
                "type": "string",
                "format": "base64",
                "description": "The actual contents of the attachment object, if embedded, encoded as base64"
              },
              "size": {
                "$ref": "#/components/schemas/Quantity"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "attachmentType": {
                "type": "string",
                "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
              },
              "mimeType": {
                "type": "string",
                "description": "a technical characterization of the attachment content format using IETF Mime Types"
              }
            },
            "required": [
              "attachmentType",
              "mimeType"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "Attachment_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Complements the description of an element (for instance a product) through video, pictures...",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the attachment"
              },
              "description": {
                "type": "string",
                "description": "A narrative text describing the content of the attachment",
                "example": "Photograph of the Product"
              },
              "url": {
                "type": "string",
                "description": "Uniform Resource Locator, is a web page address (a subset of URI)",
                "example": "https://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
              },
              "content": {
                "type": "string",
                "format": "base64",
                "description": "The actual contents of the attachment object, if embedded, encoded as base64"
              },
              "size": {
                "$ref": "#/components/schemas/Quantity"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "attachmentType": {
                "type": "string",
                "description": "a business characterization of the purpose of the attachment, for example logo, instructionManual, contractCopy"
              },
              "mimeType": {
                "type": "string",
                "description": "a technical characterization of the attachment content format using IETF Mime Types"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BaseEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "Base event with common attributes.",
            "properties": {
              "event": {
                "type": "object",
                "description": "The event linked to the involved resource object"
              },
              "eventId": {
                "type": "string",
                "description": "The identifier of the notification."
              },
              "eventTime": {
                "type": "string",
                "format": "date-time",
                "description": "Time of the event occurrence."
              },
              "eventType": {
                "type": "string",
                "description": "The type of the notification."
              },
              "correlationId": {
                "type": "string",
                "description": "The correlation id for this event."
              },
              "domain": {
                "type": "string",
                "description": "The domain of the event."
              },
              "title": {
                "type": "string",
                "description": "The title of the event."
              },
              "description": {
                "type": "string",
                "description": "An explanatory of the event."
              },
              "priority": {
                "type": "string",
                "description": "A priority."
              },
              "timeOcurred": {
                "type": "string",
                "format": "date-time",
                "description": "The time the event occurred."
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of the way in which a bill is presented.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text for this bill format"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillFormatAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillFormatAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "BillFormatAttributeValueChangeEventPayload generic structure",
        "properties": {
          "billFormat": {
            "$ref": "#/components/schemas/BillFormat"
          }
        }
      },
      "BillFormatCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillFormatCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillFormatCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatCreateEventPayload": {
        "type": "object",
        "description": "BillFormatCreateEventPayload generic structure",
        "properties": {
          "billFormat": {
            "$ref": "#/components/schemas/BillFormat"
          }
        }
      },
      "BillFormatDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillFormatDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillFormatDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatDeleteEventPayload": {
        "type": "object",
        "description": "BillFormatDeleteEventPayload generic structure",
        "properties": {
          "billFormat": {
            "$ref": "#/components/schemas/BillFormat"
          }
        }
      },
      "BillFormatRef": {
        "type": "object",
        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatRefOrValue": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillFormat"
          },
          {
            "$ref": "#/components/schemas/BillFormatRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatRefOrValue_FVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillFormat_FVO"
          },
          {
            "$ref": "#/components/schemas/BillFormatRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatRefOrValue_MVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillFormat entity and not the BillFormatRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillFormat_MVO"
          },
          {
            "$ref": "#/components/schemas/BillFormatRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatRef_FVO": {
        "type": "object",
        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatRef_MVO": {
        "type": "object",
        "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillFormatStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillFormatStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillFormatStateChangeEventPayload": {
        "type": "object",
        "description": "BillFormatStateChangeEventPayload generic structure",
        "properties": {
          "billFormat": {
            "$ref": "#/components/schemas/BillFormat"
          }
        }
      },
      "BillFormat_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of the way in which a bill is presented.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text for this bill format"
              }
            },
            "required": [
              "name"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "BillFormat_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of the way in which a bill is presented.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text for this bill format"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMedia": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text describing this bill presentation media"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillPresentationMediaAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillPresentationMediaAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "BillPresentationMediaAttributeValueChangeEventPayload generic structure",
        "properties": {
          "billPresentationMedia": {
            "$ref": "#/components/schemas/BillPresentationMedia"
          }
        }
      },
      "BillPresentationMediaCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillPresentationMediaCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillPresentationMediaCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaCreateEventPayload": {
        "type": "object",
        "description": "BillPresentationMediaCreateEventPayload generic structure",
        "properties": {
          "billPresentationMedia": {
            "$ref": "#/components/schemas/BillPresentationMedia"
          }
        }
      },
      "BillPresentationMediaDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillPresentationMediaDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillPresentationMediaDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaDeleteEventPayload": {
        "type": "object",
        "description": "BillPresentationMediaDeleteEventPayload generic structure",
        "properties": {
          "billPresentationMedia": {
            "$ref": "#/components/schemas/BillPresentationMedia"
          }
        }
      },
      "BillPresentationMediaRef": {
        "type": "object",
        "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaRefOrValue": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillPresentationMedia"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaRefOrValue_FVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillPresentationMedia_FVO"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaRefOrValue_MVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillPresentationMedia entity and not the BillPresentationMediaRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillPresentationMedia_MVO"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaRef_FVO": {
        "type": "object",
        "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaRef_MVO": {
        "type": "object",
        "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillPresentationMediaStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillPresentationMediaStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMediaStateChangeEventPayload": {
        "type": "object",
        "description": "BillPresentationMediaStateChangeEventPayload generic structure",
        "properties": {
          "billPresentationMedia": {
            "$ref": "#/components/schemas/BillPresentationMedia"
          }
        }
      },
      "BillPresentationMedia_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text describing this bill presentation media"
              }
            },
            "required": [
              "name"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "BillPresentationMedia_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "description": {
                "type": "string",
                "description": "An explanatory text describing this bill presentation media"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillStructure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "The structure of the bill for party accounts (billing or settlement).",
            "properties": {
              "presentationMedia": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillPresentationMediaRefOrValue"
                }
              },
              "format": {
                "$ref": "#/components/schemas/BillFormatRefOrValue"
              },
              "cycleSpecification": {
                "$ref": "#/components/schemas/BillingCycleSpecificationRefOrValue"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillStructure_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "The structure of the bill for party accounts (billing or settlement).",
            "properties": {
              "presentationMedia": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillPresentationMediaRefOrValue_FVO"
                }
              },
              "format": {
                "$ref": "#/components/schemas/BillFormatRefOrValue_FVO"
              },
              "cycleSpecification": {
                "$ref": "#/components/schemas/BillingCycleSpecificationRefOrValue_FVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillStructure_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "The structure of the bill for party accounts (billing or settlement).",
            "properties": {
              "presentationMedia": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillPresentationMediaRefOrValue_MVO"
                }
              },
              "format": {
                "$ref": "#/components/schemas/BillFormatRefOrValue_MVO"
              },
              "cycleSpecification": {
                "$ref": "#/components/schemas/BillingCycleSpecificationRefOrValue_MVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount"
          },
          {
            "type": "object",
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
            "properties": {
              "ratingType": {
                "type": "string",
                "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
              }
            }
          }
        ]
      },
      "BillingAccountAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingAccountAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingAccountAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingAccountAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "BillingAccountAttributeValueChangeEventPayload generic structure",
        "properties": {
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        }
      },
      "BillingAccountCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingAccountCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingAccountCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingAccountCreateEventPayload": {
        "type": "object",
        "description": "BillingAccountCreateEventPayload generic structure",
        "properties": {
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        }
      },
      "BillingAccountDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingAccountDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingAccountDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingAccountDeleteEventPayload": {
        "type": "object",
        "description": "BillingAccountDeleteEventPayload generic structure",
        "properties": {
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        }
      },
      "BillingAccountStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingAccountStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingAccountStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingAccountStateChangeEventPayload": {
        "type": "object",
        "description": "BillingAccountStateChangeEventPayload generic structure",
        "properties": {
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        }
      },
      "BillingAccount_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount_FVO"
          },
          {
            "type": "object",
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
            "properties": {
              "ratingType": {
                "type": "string",
                "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
              }
            },
            "required": [
              "name",
              "relatedParty"
            ]
          }
        ]
      },
      "BillingAccount_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount_MVO"
          },
          {
            "type": "object",
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
            "properties": {
              "ratingType": {
                "type": "string",
                "description": "Indicates whether the account follows a specific payment option such as prepaid or postpaid"
              }
            }
          }
        ]
      },
      "BillingCycleSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "billingDateShift": {
                "type": "integer",
                "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
              },
              "billingPeriod": {
                "type": "string",
                "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
              },
              "chargeDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "creditDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "description": {
                "type": "string",
                "description": "An explanation regarding this billing cycle specification"
              },
              "frequency": {
                "type": "string",
                "description": "Frequency of the billing cycle (monthly for instance)"
              },
              "mailingDateOffset": {
                "type": "integer",
                "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "paymentDueDateOffset": {
                "type": "integer",
                "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingCycleSpecificationAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingCycleSpecificationAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "BillingCycleSpecificationAttributeValueChangeEventPayload generic structure",
        "properties": {
          "billingCycleSpecification": {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          }
        }
      },
      "BillingCycleSpecificationCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingCycleSpecificationCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingCycleSpecificationCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationCreateEventPayload": {
        "type": "object",
        "description": "BillingCycleSpecificationCreateEventPayload generic structure",
        "properties": {
          "billingCycleSpecification": {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          }
        }
      },
      "BillingCycleSpecificationDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingCycleSpecificationDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingCycleSpecificationDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationDeleteEventPayload": {
        "type": "object",
        "description": "BillingCycleSpecificationDeleteEventPayload generic structure",
        "properties": {
          "billingCycleSpecification": {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          }
        }
      },
      "BillingCycleSpecificationRef": {
        "type": "object",
        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationRefOrValue": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationRef"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationRefOrValue_FVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillingCycleSpecification_FVO"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationRefOrValue_MVO": {
        "type": "object",
        "description": "The polymorphic attributes @type, @schemaLocation & @referredType are related to the BillingCycleSpecification entity and not the BillingCycleSpecificationRefOrValue class itself",
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillingCycleSpecification_MVO"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationRef_FVO": {
        "type": "object",
        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationRef_MVO": {
        "type": "object",
        "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "BillingCycleSpecificationStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/BillingCycleSpecificationStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecificationStateChangeEventPayload": {
        "type": "object",
        "description": "BillingCycleSpecificationStateChangeEventPayload generic structure",
        "properties": {
          "billingCycleSpecification": {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          }
        }
      },
      "BillingCycleSpecification_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "billingDateShift": {
                "type": "integer",
                "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
              },
              "billingPeriod": {
                "type": "string",
                "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
              },
              "chargeDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "creditDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "description": {
                "type": "string",
                "description": "An explanation regarding this billing cycle specification"
              },
              "frequency": {
                "type": "string",
                "description": "Frequency of the billing cycle (monthly for instance)"
              },
              "mailingDateOffset": {
                "type": "integer",
                "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "paymentDueDateOffset": {
                "type": "integer",
                "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            },
            "required": [
              "name"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "BillingCycleSpecification_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.",
            "properties": {
              "name": {
                "type": "string",
                "description": "A short descriptive name"
              },
              "billingDateShift": {
                "type": "integer",
                "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
              },
              "billingPeriod": {
                "type": "string",
                "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
              },
              "chargeDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "creditDateOffset": {
                "type": "integer",
                "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "description": {
                "type": "string",
                "description": "An explanation regarding this billing cycle specification"
              },
              "frequency": {
                "type": "string",
                "description": "Frequency of the billing cycle (monthly for instance)"
              },
              "mailingDateOffset": {
                "type": "integer",
                "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "paymentDueDateOffset": {
                "type": "integer",
                "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "Characteristic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Describes a given characteristic of an object or entity through a name/value pair. This is an abstract base class, the actual value is in one of the strongly-typed subclasses : StringCharacteristic, ObjectCharacteristic, FloatCharacteristic, BooleanCharacteristic, NumberCharacteristic, IntegerCharacteristic, StringArrayCharacteristic, ObjectArrayCharacteristic, BooleanArrayCharacteristic, NumberArrayCharacteristic, IntegerArrayCharacteristic...",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "name": {
                "type": "string",
                "description": "Name of the characteristic"
              },
              "valueType": {
                "type": "string",
                "description": "Data type of the value of the characteristic"
              },
              "characteristicRelationship": {
                "type": "array",
                "description": "Collection of characteristic relationships",
                "items": {
                  "$ref": "#/components/schemas/CharacteristicRelationship"
                }
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "CharacteristicRelationship": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Another Characteristic that is related to the current Characteristic;",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the characteristic"
              },
              "relationshipType": {
                "type": "string",
                "description": "The type of relationship"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the contact within list of the contacts (for entities with list)"
              },
              "contactName": {
                "type": "string",
                "description": "A displayable name for that contact"
              },
              "contactType": {
                "type": "string",
                "description": "Type of contact (primary, secondary...)"
              },
              "partyRoleType": {
                "type": "string",
                "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "contactMedium": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMedium"
                },
                "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc."
              },
              "relatedParty": {
                "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "ContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Indicates the contact medium that could be used to contact the party. This is an abstract base class, the actual value is in one of the strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium, GeographicAddressContactMedium, SocialMediaContactMedium...",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier for this contact medium."
              },
              "preferred": {
                "type": "boolean",
                "description": "If true, indicates that is the preferred contact medium"
              },
              "contactType": {
                "type": "string",
                "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "ContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Indicates the contact medium that could be used to contact the party. This is an abstract base class, the actual value is in one of the strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium, GeographicAddressContactMedium, SocialMediaContactMedium...",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier for this contact medium."
              },
              "preferred": {
                "type": "boolean",
                "description": "If true, indicates that is the preferred contact medium"
              },
              "contactType": {
                "type": "string",
                "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "ContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "Indicates the contact medium that could be used to contact the party. This is an abstract base class, the actual value is in one of the strongly-typed subclasses : EmailContactMedium, FaxContactMedium, PhoneContactMedium, GeographicAddressContactMedium, SocialMediaContactMedium...",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier for this contact medium."
              },
              "preferred": {
                "type": "boolean",
                "description": "If true, indicates that is the preferred contact medium"
              },
              "contactType": {
                "type": "string",
                "description": "Type of the contact medium to qualify it like pro email / personal email. This is not used to define the contact medium used."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "Contact_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the contact within list of the contacts (for entities with list)"
              },
              "contactName": {
                "type": "string",
                "description": "A displayable name for that contact"
              },
              "contactType": {
                "type": "string",
                "description": "Type of contact (primary, secondary...)"
              },
              "partyRoleType": {
                "type": "string",
                "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "contactMedium": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMedium_FVO"
                },
                "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc."
              },
              "relatedParty": {
                "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO"
              }
            },
            "required": [
              "contactType"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "Contact_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium.",
            "properties": {
              "contactName": {
                "type": "string",
                "description": "A displayable name for that contact"
              },
              "contactType": {
                "type": "string",
                "description": "Type of contact (primary, secondary...)"
              },
              "partyRoleType": {
                "type": "string",
                "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "contactMedium": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactMedium_MVO"
                },
                "description": "List of contact mediums for the contact, such as mobile phone number, email addreess, etc."
              },
              "relatedParty": {
                "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "EmailContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium"
          },
          {
            "type": "object",
            "description": "Describes an email that could be used to contact a party (an individual or an organization)",
            "properties": {
              "emailAddress": {
                "type": "string",
                "description": "Full email address in standard format"
              }
            }
          }
        ]
      },
      "EmailContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_FVO"
          },
          {
            "type": "object",
            "description": "Describes an email that could be used to contact a party (an individual or an organization)",
            "properties": {
              "emailAddress": {
                "type": "string",
                "description": "Full email address in standard format"
              }
            }
          }
        ]
      },
      "EmailContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_MVO"
          },
          {
            "type": "object",
            "description": "Describes an email that could be used to contact a party (an individual or an organization)",
            "properties": {
              "emailAddress": {
                "type": "string",
                "description": "Full email address in standard format"
              }
            }
          }
        ]
      },
      "Entity": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          }
        ]
      },
      "EntityRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity."
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              },
              "topicRef": {
                "type": "string",
                "description": "A reference to the topic from which this entity can be fetched"
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      "EntityRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The identifier of the referred entity."
              },
              "href": {
                "type": "string",
                "description": "The URI of the referred entity."
              },
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              },
              "topicRef": {
                "type": "string",
                "description": "A reference to the topic from which this entity can be fetched"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        ]
      },
      "EntityRef_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "$ref": "#/components/schemas/Addressable"
          },
          {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the referred entity."
              },
              "@referredType": {
                "type": "string",
                "description": "The actual type of the target instance when needed for disambiguation."
              }
            }
          }
        ]
      },
      "Entity_MVO": {
        "type": "object",
        "description": "Base entity schema for use in TMForum Open-APIs. Property.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          }
        ]
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "event with common attributes.",
            "properties": {
              "href": {
                "type": "string",
                "description": "Hyperlink reference"
              },
              "id": {
                "type": "string",
                "description": "unique identifier"
              },
              "correlationId": {
                "type": "string",
                "description": "The correlation id for this event."
              },
              "domain": {
                "type": "string",
                "description": "The domain of the event."
              },
              "title": {
                "type": "string",
                "description": "The title of the event."
              },
              "description": {
                "type": "string",
                "description": "An explanation of the event."
              },
              "priority": {
                "type": "string",
                "description": "A priority."
              },
              "timeOccurred": {
                "type": "string",
                "format": "date-time",
                "description": "The time the event occurred."
              },
              "source": {
                "$ref": "#/components/schemas/EntityRef"
              },
              "reportingSystem": {
                "$ref": "#/components/schemas/EntityRef"
              },
              "relatedParty": {
                "type": "array",
                "description": "Collection of related parties",
                "items": {
                  "$ref": "#/components/schemas/RelatedPartyRefOrPartyRoleRef"
                }
              },
              "analyticCharacteristic": {
                "type": "array",
                "description": "Collection of analytic characteristics",
                "items": {
                  "$ref": "#/components/schemas/Characteristic"
                }
              },
              "eventId": {
                "type": "string",
                "description": "The identifier of the notification."
              },
              "eventTime": {
                "type": "string",
                "format": "date-time",
                "description": "Time of the event occurrence."
              },
              "eventType": {
                "type": "string",
                "description": "The type of the notification."
              },
              "event": {
                "description": "The event linked to the involved resource object",
                "type": "object"
              },
              "topicRef": {
                "type": "string",
                "description": "A reference to the topic from which this entity can be fetched"
              }
            }
          }
        ]
      },
      "Extensible": {
        "type": "object",
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type",
        "properties": {
          "@type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name"
          },
          "@baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class"
          },
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        },
        "required": [
          "@type"
        ]
      },
      "Extensible_MVO": {
        "type": "object",
        "description": "Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means that the Entity described by the schema  MUST be extended with the @type",
        "properties": {
          "@schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
          }
        }
      },
      "FaxContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium"
          },
          {
            "type": "object",
            "description": "Describes a fax that could be used to contact a party (an individual or an organization)",
            "properties": {
              "faxNumber": {
                "type": "string",
                "description": "The fax number of the contact"
              }
            }
          }
        ]
      },
      "FaxContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_FVO"
          },
          {
            "type": "object",
            "description": "Describes a fax that could be used to contact a party (an individual or an organization)",
            "properties": {
              "faxNumber": {
                "type": "string",
                "description": "The fax number of the contact"
              }
            }
          }
        ]
      },
      "FaxContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_MVO"
          },
          {
            "type": "object",
            "description": "Describes a fax that could be used to contact a party (an individual or an organization)",
            "properties": {
              "faxNumber": {
                "type": "string",
                "description": "The fax number of the contact"
              }
            }
          }
        ]
      },
      "FinancialAccount": {
        "type": "object",
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party. It is a specialization of entity Account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Account"
          }
        ]
      },
      "FinancialAccountAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "FinancialAccountAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/FinancialAccountAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "FinancialAccountAttributeValueChangeEventPayload generic structure",
        "properties": {
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccount"
          }
        }
      },
      "FinancialAccountCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "FinancialAccountCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/FinancialAccountCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountCreateEventPayload": {
        "type": "object",
        "description": "FinancialAccountCreateEventPayload generic structure",
        "properties": {
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccount"
          }
        }
      },
      "FinancialAccountDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "FinancialAccountDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/FinancialAccountDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountDeleteEventPayload": {
        "type": "object",
        "description": "FinancialAccountDeleteEventPayload generic structure",
        "properties": {
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccount"
          }
        }
      },
      "FinancialAccountRef": {
        "type": "object",
        "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountRef_FVO": {
        "type": "object",
        "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountRef_MVO": {
        "type": "object",
        "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "FinancialAccountStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/FinancialAccountStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "FinancialAccountStateChangeEventPayload": {
        "type": "object",
        "description": "FinancialAccountStateChangeEventPayload generic structure",
        "properties": {
          "financialAccount": {
            "$ref": "#/components/schemas/FinancialAccount"
          }
        }
      },
      "FinancialAccount_FVO": {
        "type": "object",
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party. It is a specialization of entity Account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_FVO"
          }
        ],
        "required": [
          "name"
        ]
      },
      "FinancialAccount_MVO": {
        "type": "object",
        "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party. It is a specialization of entity Account.",
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_MVO"
          }
        ]
      },
      "GeographicAddressContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium"
          },
          {
            "type": "object",
            "description": "Describes a geographical address that could be used to contact a party (an individual or an organization)",
            "properties": {
              "city": {
                "type": "string",
                "description": "The city"
              },
              "country": {
                "type": "string",
                "description": "The country"
              },
              "postCode": {
                "type": "string",
                "description": "Postcode"
              },
              "stateOrProvince": {
                "type": "string",
                "description": "State or province"
              },
              "street1": {
                "type": "string",
                "description": "Describes the street"
              },
              "street2": {
                "type": "string",
                "description": "Complementary street description"
              },
              "geographicAddress": {
                "$ref": "#/components/schemas/GeographicAddressRef"
              }
            }
          }
        ]
      },
      "GeographicAddressContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_FVO"
          },
          {
            "type": "object",
            "description": "Describes a geographical address that could be used to contact a party (an individual or an organization)",
            "properties": {
              "city": {
                "type": "string",
                "description": "The city"
              },
              "country": {
                "type": "string",
                "description": "The country"
              },
              "postCode": {
                "type": "string",
                "description": "Postcode"
              },
              "stateOrProvince": {
                "type": "string",
                "description": "State or province"
              },
              "street1": {
                "type": "string",
                "description": "Describes the street"
              },
              "street2": {
                "type": "string",
                "description": "Complementary street description"
              },
              "geographicAddress": {
                "$ref": "#/components/schemas/GeographicAddressRef_FVO"
              }
            }
          }
        ]
      },
      "GeographicAddressContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_MVO"
          },
          {
            "type": "object",
            "description": "Describes a geographical address that could be used to contact a party (an individual or an organization)",
            "properties": {
              "city": {
                "type": "string",
                "description": "The city"
              },
              "country": {
                "type": "string",
                "description": "The country"
              },
              "postCode": {
                "type": "string",
                "description": "Postcode"
              },
              "stateOrProvince": {
                "type": "string",
                "description": "State or province"
              },
              "street1": {
                "type": "string",
                "description": "Describes the street"
              },
              "street2": {
                "type": "string",
                "description": "Complementary street description"
              },
              "geographicAddress": {
                "$ref": "#/components/schemas/GeographicAddressRef_MVO"
              }
            }
          }
        ]
      },
      "GeographicAddressRef": {
        "type": "object",
        "description": "Reference to a Geographic Address.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "GeographicAddressRef_FVO": {
        "type": "object",
        "description": "Reference to a Geographic Address.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "GeographicAddressRef_MVO": {
        "type": "object",
        "description": "Reference to a Geographic Address.",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "Money": {
        "type": "object",
        "description": "A base / value business entity used to represent money",
        "properties": {
          "unit": {
            "type": "string",
            "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
          },
          "value": {
            "type": "number",
            "format": "float",
            "description": "A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type"
          }
        }
      },
      "PartyAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Account"
          },
          {
            "type": "object",
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual). It is a specialization of entity Account.",
            "properties": {
              "paymentStatus": {
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "$ref": "#/components/schemas/BillStructure"
              },
              "paymentPlan": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentPlan"
                },
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying"
              },
              "financialAccount": {
                "$ref": "#/components/schemas/FinancialAccountRef"
              },
              "defaultPaymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccountAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "PartyAccountAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/PartyAccountAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccountAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "PartyAccountAttributeValueChangeEventPayload generic structure",
        "properties": {
          "partyAccount": {
            "$ref": "#/components/schemas/PartyAccount"
          }
        }
      },
      "PartyAccountCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "PartyAccountCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/PartyAccountCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccountCreateEventPayload": {
        "type": "object",
        "description": "PartyAccountCreateEventPayload generic structure",
        "properties": {
          "partyAccount": {
            "$ref": "#/components/schemas/PartyAccount"
          }
        }
      },
      "PartyAccountDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "PartyAccountDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/PartyAccountDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccountDeleteEventPayload": {
        "type": "object",
        "description": "PartyAccountDeleteEventPayload generic structure",
        "properties": {
          "partyAccount": {
            "$ref": "#/components/schemas/PartyAccount"
          }
        }
      },
      "PartyAccountStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "PartyAccountStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/PartyAccountStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccountStateChangeEventPayload": {
        "type": "object",
        "description": "PartyAccountStateChangeEventPayload generic structure",
        "properties": {
          "partyAccount": {
            "$ref": "#/components/schemas/PartyAccount"
          }
        }
      },
      "PartyAccount_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_FVO"
          },
          {
            "type": "object",
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual). It is a specialization of entity Account.",
            "properties": {
              "paymentStatus": {
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "$ref": "#/components/schemas/BillStructure_FVO"
              },
              "paymentPlan": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentPlan_FVO"
                },
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying"
              },
              "financialAccount": {
                "$ref": "#/components/schemas/FinancialAccountRef_FVO"
              },
              "defaultPaymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef_FVO"
              }
            },
            "required": [
              "name",
              "relatedParty"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "PartyAccount_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Account_MVO"
          },
          {
            "type": "object",
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual). It is a specialization of entity Account.",
            "properties": {
              "paymentStatus": {
                "type": "string",
                "description": "The condition of the account, such as due, paid, in arrears."
              },
              "billStructure": {
                "$ref": "#/components/schemas/BillStructure_MVO"
              },
              "paymentPlan": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentPlan_MVO"
                },
                "description": "A list of payment plans that are active or expired for the account, for example if the customer had difficulty in paying"
              },
              "financialAccount": {
                "$ref": "#/components/schemas/FinancialAccountRef_MVO"
              },
              "defaultPaymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef_MVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyRef": {
        "type": "object",
        "description": "A Party reference",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRefOrPartyRoleRef": {
        "type": "object",
        "description": "",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRefOrPartyRoleRef_FVO": {
        "type": "object",
        "description": "",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_FVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRefOrPartyRoleRef_MVO": {
        "type": "object",
        "description": "",
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyRef_MVO"
          },
          {
            "$ref": "#/components/schemas/PartyRoleRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRef_FVO": {
        "type": "object",
        "description": "A Party reference",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRef_MVO": {
        "type": "object",
        "description": "A Party reference",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "PartyRoleRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          },
          {
            "type": "object",
            "description": "Party role reference. A party role represents the part played by a party in a given context.",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyRoleRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          },
          {
            "type": "object",
            "description": "Party role reference. A party role represents the part played by a party in a given context.",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PartyRoleRef_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          },
          {
            "type": "object",
            "description": "Party role reference. A party role represents the part played by a party in a given context.",
            "properties": {
              "partyId": {
                "type": "string",
                "description": "The identifier of the engaged party that is linked to the PartyRole object."
              },
              "partyName": {
                "type": "string",
                "description": "The name of the engaged party that is linked to the PartyRole object."
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PaymentMethodRef": {
        "type": "object",
        "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef"
          }
        ],
        "discriminator": "@type"
      },
      "PaymentMethodRef_FVO": {
        "type": "object",
        "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_FVO"
          }
        ],
        "discriminator": "@type"
      },
      "PaymentMethodRef_MVO": {
        "type": "object",
        "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).",
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityRef_MVO"
          }
        ],
        "discriminator": "@type"
      },
      "PaymentPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Defines a plan for payment (when a party wants to spread his payments)",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the plan within list of the plans (for entities with list)"
              },
              "numberOfPayments": {
                "type": "integer",
                "description": "Number of payments used to spread the global payment"
              },
              "paymentFrequency": {
                "type": "string",
                "description": "Frequency of the payments, such as monthly and bimonthly"
              },
              "priority": {
                "type": "integer",
                "description": "Priority of the payment plan"
              },
              "status": {
                "type": "string",
                "description": "Status of the payment plan (effective, ineffective)"
              },
              "totalAmount": {
                "$ref": "#/components/schemas/Money"
              },
              "planType": {
                "type": "string",
                "description": "Type of payment plan"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "paymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PaymentPlan_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Defines a plan for payment (when a party wants to spread his payments)",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the plan within list of the plans (for entities with list)"
              },
              "numberOfPayments": {
                "type": "integer",
                "description": "Number of payments used to spread the global payment"
              },
              "paymentFrequency": {
                "type": "string",
                "description": "Frequency of the payments, such as monthly and bimonthly"
              },
              "priority": {
                "type": "integer",
                "description": "Priority of the payment plan"
              },
              "status": {
                "type": "string",
                "description": "Status of the payment plan (effective, ineffective)"
              },
              "totalAmount": {
                "$ref": "#/components/schemas/Money"
              },
              "planType": {
                "type": "string",
                "description": "Type of payment plan"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "paymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef_FVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PaymentPlan_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "Defines a plan for payment (when a party wants to spread his payments)",
            "properties": {
              "numberOfPayments": {
                "type": "integer",
                "description": "Number of payments used to spread the global payment"
              },
              "paymentFrequency": {
                "type": "string",
                "description": "Frequency of the payments, such as monthly and bimonthly"
              },
              "priority": {
                "type": "integer",
                "description": "Priority of the payment plan"
              },
              "status": {
                "type": "string",
                "description": "Status of the payment plan (effective, ineffective)"
              },
              "totalAmount": {
                "$ref": "#/components/schemas/Money"
              },
              "planType": {
                "type": "string",
                "description": "Type of payment plan"
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "paymentMethod": {
                "$ref": "#/components/schemas/PaymentMethodRef_MVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "PhoneContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium"
          },
          {
            "type": "object",
            "description": "Describes a phone number that could be used to contact a party (an individual or an organization)",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "The phone number of the contact"
              }
            }
          }
        ]
      },
      "PhoneContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_FVO"
          },
          {
            "type": "object",
            "description": "Describes a phone number that could be used to contact a party (an individual or an organization)",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "The phone number of the contact"
              }
            }
          }
        ]
      },
      "PhoneContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_MVO"
          },
          {
            "type": "object",
            "description": "Describes a phone number that could be used to contact a party (an individual or an organization)",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "The phone number of the contact"
              }
            }
          }
        ]
      },
      "Quantity": {
        "type": "object",
        "description": "An amount in a given unit",
        "properties": {
          "amount": {
            "type": "number",
            "format": "float",
            "default": 1,
            "description": "Numeric value in a given unit"
          },
          "units": {
            "type": "string",
            "description": "Unit"
          }
        }
      },
      "RelatedPartyRefOrPartyRoleRef": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity",
            "properties": {
              "role": {
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'",
                "type": "string"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "RelatedPartyRefOrPartyRoleRef_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity",
            "properties": {
              "role": {
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'",
                "type": "string"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_FVO"
              }
            },
            "required": [
              "role"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "RelatedPartyRefOrPartyRoleRef_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "RelatedParty reference. A related party defines party or party role or its reference, linked to a specific entity",
            "properties": {
              "role": {
                "description": "Role played by the related party or party role in the context of the specific entity it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'",
                "type": "string"
              },
              "partyOrPartyRole": {
                "$ref": "#/components/schemas/PartyRefOrPartyRoleRef_MVO"
              }
            },
            "required": [
              "role"
            ]
          }
        ],
        "discriminator": "@type"
      },
      "SettlementAccount": {
        "type": "object",
        "description": "A party account used for settlement purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount"
          }
        ]
      },
      "SettlementAccountAttributeValueChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "SettlementAccountAttributeValueChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/SettlementAccountAttributeValueChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "SettlementAccountAttributeValueChangeEventPayload": {
        "type": "object",
        "description": "SettlementAccountAttributeValueChangeEventPayload generic structure",
        "properties": {
          "settlementAccount": {
            "$ref": "#/components/schemas/SettlementAccount"
          }
        }
      },
      "SettlementAccountCreateEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "SettlementAccountCreateEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/SettlementAccountCreateEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "SettlementAccountCreateEventPayload": {
        "type": "object",
        "description": "SettlementAccountCreateEventPayload generic structure",
        "properties": {
          "settlementAccount": {
            "$ref": "#/components/schemas/SettlementAccount"
          }
        }
      },
      "SettlementAccountDeleteEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "SettlementAccountDeleteEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/SettlementAccountDeleteEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "SettlementAccountDeleteEventPayload": {
        "type": "object",
        "description": "SettlementAccountDeleteEventPayload generic structure",
        "properties": {
          "settlementAccount": {
            "$ref": "#/components/schemas/SettlementAccount"
          }
        }
      },
      "SettlementAccountStateChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Event"
          },
          {
            "type": "object",
            "description": "SettlementAccountStateChangeEvent generic structure",
            "properties": {
              "event": {
                "$ref": "#/components/schemas/SettlementAccountStateChangeEventPayload"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "SettlementAccountStateChangeEventPayload": {
        "type": "object",
        "description": "SettlementAccountStateChangeEventPayload generic structure",
        "properties": {
          "settlementAccount": {
            "$ref": "#/components/schemas/SettlementAccount"
          }
        }
      },
      "SettlementAccount_FVO": {
        "type": "object",
        "description": "A party account used for settlement purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount_FVO"
          }
        ],
        "required": [
          "name",
          "relatedParty"
        ]
      },
      "SettlementAccount_MVO": {
        "type": "object",
        "description": "A party account used for settlement purposes. It includes a description of the bill structure (frequency, presentation media, format and so on). It is a specialization of entity PartyAccount.",
        "allOf": [
          {
            "$ref": "#/components/schemas/PartyAccount_MVO"
          }
        ]
      },
      "SocialContactMedium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium"
          },
          {
            "type": "object",
            "description": "Describes a social media identifier that could be used to contact a party (an individual or an organization)",
            "properties": {
              "socialNetworkId": {
                "type": "string",
                "description": "Identifier as a member of a social network"
              }
            }
          }
        ]
      },
      "SocialContactMedium_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_FVO"
          },
          {
            "type": "object",
            "description": "Describes a social media identifier that could be used to contact a party (an individual or an organization)",
            "properties": {
              "socialNetworkId": {
                "type": "string",
                "description": "Identifier as a member of a social network"
              }
            }
          }
        ]
      },
      "SocialContactMedium_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactMedium_MVO"
          },
          {
            "type": "object",
            "description": "Describes a social media identifier that could be used to contact a party (an individual or an organization)",
            "properties": {
              "socialNetworkId": {
                "type": "string",
                "description": "Identifier as a member of a social network"
              }
            }
          }
        ]
      },
      "TaxDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For example, there are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California, City Tax levied by the City of Los Angeles, etc.).",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the tax."
              },
              "name": {
                "type": "string",
                "description": "Tax name."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "jurisdictionName": {
                "type": "string",
                "description": "Name of the jurisdiction that levies the tax",
                "example": "USA"
              },
              "jurisdictionLevel": {
                "type": "string",
                "description": "Level of the jurisdiction that levies the tax",
                "example": "Country"
              },
              "taxType": {
                "type": "string",
                "description": "Type of the tax.",
                "example": "VAT"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "TaxDefinition_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For example, there are many different types of tax (Federal Tax levied by the US Government, State Tax levied by the State of California, City Tax levied by the City of Los Angeles, etc.).",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the tax."
              },
              "name": {
                "type": "string",
                "description": "Tax name."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "jurisdictionName": {
                "type": "string",
                "description": "Name of the jurisdiction that levies the tax",
                "example": "USA"
              },
              "jurisdictionLevel": {
                "type": "string",
                "description": "Level of the jurisdiction that levies the tax",
                "example": "Country"
              },
              "taxType": {
                "type": "string",
                "description": "Type of the tax.",
                "example": "VAT"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "TaxExemptionCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the tax exemption within list of the exemptions"
              },
              "taxDefinition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxDefinition"
                },
                "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "certificateNumber": {
                "type": "string",
                "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
              },
              "issuingJurisdiction": {
                "type": "string",
                "description": "Name of the jurisdiction that issued the exemption",
                "example": "USA"
              },
              "reason": {
                "type": "string",
                "description": "Reason for the tax exemption"
              },
              "attachment": {
                "$ref": "#/components/schemas/AttachmentRefOrValue"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "TaxExemptionCertificate_FVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identifier of the tax exemption within list of the exemptions"
              },
              "taxDefinition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxDefinition"
                },
                "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "certificateNumber": {
                "type": "string",
                "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
              },
              "issuingJurisdiction": {
                "type": "string",
                "description": "Name of the jurisdiction that issued the exemption",
                "example": "USA"
              },
              "reason": {
                "type": "string",
                "description": "Reason for the tax exemption"
              },
              "attachment": {
                "$ref": "#/components/schemas/AttachmentRefOrValue_FVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "TaxExemptionCertificate_MVO": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible_MVO"
          },
          {
            "type": "object",
            "description": "A tax exemption certificate represents a tax exemption granted to a party (individual or organization) by a tax jurisdiction which may be a city, state, country,... An exemption has a certificate identifier (received from the jurisdiction that levied the tax) and a validity period. An exemption is per tax types and determines for each type of tax what portion of the tax is exempted (partial by percentage or complete) via the tax definition.",
            "properties": {
              "taxDefinition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxDefinition_MVO"
                },
                "description": "A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The definition would include the exemption (e.g. for a rate exemption 0% would be a full exemption, 5% could be a partial exemption if the actual rate was 10%)."
              },
              "validFor": {
                "$ref": "#/components/schemas/TimePeriod"
              },
              "certificateNumber": {
                "type": "string",
                "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
              },
              "issuingJurisdiction": {
                "type": "string",
                "description": "Name of the jurisdiction that issued the exemption",
                "example": "USA"
              },
              "reason": {
                "type": "string",
                "description": "Reason for the tax exemption"
              },
              "attachment": {
                "$ref": "#/components/schemas/AttachmentRefOrValue_MVO"
              }
            }
          }
        ],
        "discriminator": "@type"
      },
      "TimePeriod": {
        "type": "object",
        "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
        "properties": {
          "startDateTime": {
            "description": "Start of the time period, using IETC-RFC-3339 format",
            "type": "string",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          },
          "endDateTime": {
            "description": "End of the time period, using IETC-RFC-3339 format",
            "type": "string",
            "format": "date-time",
            "example": "1985-04-12T23:20:50.52Z"
          }
        }
      },
      "Error": {
        "discriminator": "@type",
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "type": "object",
            "required": [
              "code",
              "reason"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Application relevant detail, defined in the API or a common list."
              },
              "reason": {
                "type": "string",
                "description": "Explanation of the reason for the error which can be shown to a client user."
              },
              "message": {
                "type": "string",
                "description": "More details and corrective actions related to the error which can be shown to a client user."
              },
              "status": {
                "type": "string",
                "description": "HTTP Error code extension"
              },
              "referenceError": {
                "type": "string",
                "description": "URI of documentation describing the error."
              }
            }
          }
        ],
        "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
      },
      "Hub_FVO": {
        "type": "object",
        "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
        "required": [
          "callback"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/Extensible"
          },
          {
            "properties": {
              "callback": {
                "type": "string",
                "description": "The callback being registered."
              },
              "query": {
                "type": "string",
                "description": "additional data to be passed"
              }
            }
          }
        ]
      },
      "Hub": {
        "type": "object",
        "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "properties": {
              "id": {
                "type": "string",
                "description": "Id of the listener"
              },
              "callback": {
                "type": "string",
                "description": "The callback being registered."
              },
              "query": {
                "type": "string",
                "description": "additional data to be passed"
              }
            },
            "required": [
              "callback"
            ]
          }
        ]
      },
      "JsonPatch": {
        "type": "object",
        "description": "A JSONPatch document as defined by RFC 6902",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "The operation to be performed",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ]
          },
          "path": {
            "type": "string",
            "description": "A JSON-Pointer"
          },
          "value": {
            "description": "The value to be used within the operations."
          },
          "from": {
            "type": "string",
            "description": "A string containing a JSON Pointer value."
          }
        }
      },
      "JsonPatchOperations": {
        "description": "JSONPatch Operations document as defined by RFC 6902",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JsonPatch"
        }
      },
      "BillFormatNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillFormatAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/BillFormatCreateEvent"
          },
          {
            "$ref": "#/components/schemas/BillFormatDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/BillFormatStateChangeEvent"
          }
        ]
      },
      "BillPresentationMediaNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillPresentationMediaAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaCreateEvent"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/BillPresentationMediaStateChangeEvent"
          }
        ]
      },
      "BillingAccountNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillingAccountAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/BillingAccountCreateEvent"
          },
          {
            "$ref": "#/components/schemas/BillingAccountDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/BillingAccountStateChangeEvent"
          }
        ]
      },
      "BillingCycleSpecificationNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationCreateEvent"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/BillingCycleSpecificationStateChangeEvent"
          }
        ]
      },
      "FinancialAccountNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FinancialAccountAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCreateEvent"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountStateChangeEvent"
          }
        ]
      },
      "PartyAccountNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PartyAccountAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/PartyAccountCreateEvent"
          },
          {
            "$ref": "#/components/schemas/PartyAccountDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/PartyAccountStateChangeEvent"
          }
        ]
      },
      "SettlementAccountNotificationPayload": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SettlementAccountAttributeValueChangeEvent"
          },
          {
            "$ref": "#/components/schemas/SettlementAccountCreateEvent"
          },
          {
            "$ref": "#/components/schemas/SettlementAccountDeleteEvent"
          },
          {
            "$ref": "#/components/schemas/SettlementAccountStateChangeEvent"
          }
        ]
      }
    },
    "messages": {
      "ListBillFormatRequest": {
        "name": "ListBillFormatRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListBillFormatRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillFormatArrayJsonReply": {
        "name": "200BillFormatArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BillFormat"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "400JsonReply": {
        "name": "400JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode400Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "401JsonReply": {
        "name": "401JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode401Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "403JsonReply": {
        "name": "403JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode403Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "404JsonReply": {
        "name": "404JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode404Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "405JsonReply": {
        "name": "405JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode405Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "500JsonReply": {
        "name": "500JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode500Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "501JsonReply": {
        "name": "501JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode501Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "503JsonReply": {
        "name": "503JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode503Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateBillFormatJsonRequest": {
        "name": "CreateBillFormatJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillFormat_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateBillFormatRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201BillFormatJsonReply": {
        "name": "201BillFormatJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillFormat"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "409JsonReply": {
        "name": "409JsonReply",
        "payload": {
          "$ref": "#/components/schemas/Error"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode409Header"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveBillFormatRequest": {
        "name": "RetrieveBillFormatRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveBillFormatRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillFormat_GetJsonReply": {
        "name": "200BillFormat_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillFormat"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillFormatJsonRequest": {
        "name": "PatchBillFormatJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillFormat_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillFormatRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillFormatMergePatchRequest": {
        "name": "PatchBillFormatMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/BillFormat_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillFormatRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchBillFormatJsonPatchRequest": {
        "name": "PatchBillFormatJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillFormatRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchBillFormatJsonPatchQueryRequest": {
        "name": "PatchBillFormatJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillFormatRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200BillFormat_PatchJsonReply": {
        "name": "200BillFormat_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillFormat"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200BillFormat_PatchMergePatchReply": {
        "name": "200BillFormat_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/BillFormat"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200BillFormat_PatchJsonPatchReply": {
        "name": "200BillFormat_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillFormat"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillFormat"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200BillFormat_PatchJsonPatchQueryReply": {
        "name": "200BillFormat_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillFormat"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillFormat"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteBillFormatRequest": {
        "name": "DeleteBillFormatRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteBillFormatRequestParametersHeader"
            }
          ]
        }
      },
      "204Reply": {
        "name": "204Reply",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode204Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        }
      },
      "ListBillPresentationMediaRequest": {
        "name": "ListBillPresentationMediaRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListBillPresentationMediaRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillPresentationMediaArrayJsonReply": {
        "name": "200BillPresentationMediaArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BillPresentationMedia"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateBillPresentationMediaJsonRequest": {
        "name": "CreateBillPresentationMediaJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateBillPresentationMediaRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201BillPresentationMediaJsonReply": {
        "name": "201BillPresentationMediaJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveBillPresentationMediaRequest": {
        "name": "RetrieveBillPresentationMediaRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveBillPresentationMediaRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillPresentationMedia_GetJsonReply": {
        "name": "200BillPresentationMedia_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillPresentationMediaJsonRequest": {
        "name": "PatchBillPresentationMediaJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillPresentationMediaRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillPresentationMediaMergePatchRequest": {
        "name": "PatchBillPresentationMediaMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillPresentationMediaRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchBillPresentationMediaJsonPatchRequest": {
        "name": "PatchBillPresentationMediaJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillPresentationMediaRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchBillPresentationMediaJsonPatchQueryRequest": {
        "name": "PatchBillPresentationMediaJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillPresentationMediaRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200BillPresentationMedia_PatchJsonReply": {
        "name": "200BillPresentationMedia_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200BillPresentationMedia_PatchMergePatchReply": {
        "name": "200BillPresentationMedia_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMedia"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200BillPresentationMedia_PatchJsonPatchReply": {
        "name": "200BillPresentationMedia_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillPresentationMedia"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillPresentationMedia"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200BillPresentationMedia_PatchJsonPatchQueryReply": {
        "name": "200BillPresentationMedia_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillPresentationMedia"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillPresentationMedia"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteBillPresentationMediaRequest": {
        "name": "DeleteBillPresentationMediaRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteBillPresentationMediaRequestParametersHeader"
            }
          ]
        }
      },
      "ListBillingAccountRequest": {
        "name": "ListBillingAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListBillingAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillingAccountArrayJsonReply": {
        "name": "200BillingAccountArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BillingAccount"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateBillingAccountJsonRequest": {
        "name": "CreateBillingAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateBillingAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201BillingAccountJsonReply": {
        "name": "201BillingAccountJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveBillingAccountRequest": {
        "name": "RetrieveBillingAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveBillingAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillingAccount_GetJsonReply": {
        "name": "200BillingAccount_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillingAccountJsonRequest": {
        "name": "PatchBillingAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillingAccountMergePatchRequest": {
        "name": "PatchBillingAccountMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchBillingAccountJsonPatchRequest": {
        "name": "PatchBillingAccountJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchBillingAccountJsonPatchQueryRequest": {
        "name": "PatchBillingAccountJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200BillingAccount_PatchJsonReply": {
        "name": "200BillingAccount_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200BillingAccount_PatchMergePatchReply": {
        "name": "200BillingAccount_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/BillingAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200BillingAccount_PatchJsonPatchReply": {
        "name": "200BillingAccount_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillingAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillingAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200BillingAccount_PatchJsonPatchQueryReply": {
        "name": "200BillingAccount_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillingAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillingAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteBillingAccountRequest": {
        "name": "DeleteBillingAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteBillingAccountRequestParametersHeader"
            }
          ]
        }
      },
      "ListBillingCycleSpecificationRequest": {
        "name": "ListBillingCycleSpecificationRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListBillingCycleSpecificationRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillingCycleSpecificationArrayJsonReply": {
        "name": "200BillingCycleSpecificationArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BillingCycleSpecification"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateBillingCycleSpecificationJsonRequest": {
        "name": "CreateBillingCycleSpecificationJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201BillingCycleSpecificationJsonReply": {
        "name": "201BillingCycleSpecificationJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveBillingCycleSpecificationRequest": {
        "name": "RetrieveBillingCycleSpecificationRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveBillingCycleSpecificationRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200BillingCycleSpecification_GetJsonReply": {
        "name": "200BillingCycleSpecification_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillingCycleSpecificationJsonRequest": {
        "name": "PatchBillingCycleSpecificationJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchBillingCycleSpecificationMergePatchRequest": {
        "name": "PatchBillingCycleSpecificationMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchBillingCycleSpecificationJsonPatchRequest": {
        "name": "PatchBillingCycleSpecificationJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchBillingCycleSpecificationJsonPatchQueryRequest": {
        "name": "PatchBillingCycleSpecificationJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200BillingCycleSpecification_PatchJsonReply": {
        "name": "200BillingCycleSpecification_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200BillingCycleSpecification_PatchMergePatchReply": {
        "name": "200BillingCycleSpecification_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecification"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200BillingCycleSpecification_PatchJsonPatchReply": {
        "name": "200BillingCycleSpecification_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillingCycleSpecification"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillingCycleSpecification"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200BillingCycleSpecification_PatchJsonPatchQueryReply": {
        "name": "200BillingCycleSpecification_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/BillingCycleSpecification"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BillingCycleSpecification"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteBillingCycleSpecificationRequest": {
        "name": "DeleteBillingCycleSpecificationRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteBillingCycleSpecificationRequestParametersHeader"
            }
          ]
        }
      },
      "ListFinancialAccountRequest": {
        "name": "ListFinancialAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListFinancialAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200FinancialAccountArrayJsonReply": {
        "name": "200FinancialAccountArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/FinancialAccount"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateFinancialAccountJsonRequest": {
        "name": "CreateFinancialAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateFinancialAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201FinancialAccountJsonReply": {
        "name": "201FinancialAccountJsonReply",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveFinancialAccountRequest": {
        "name": "RetrieveFinancialAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveFinancialAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200FinancialAccount_GetJsonReply": {
        "name": "200FinancialAccount_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchFinancialAccountJsonRequest": {
        "name": "PatchFinancialAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchFinancialAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchFinancialAccountMergePatchRequest": {
        "name": "PatchFinancialAccountMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchFinancialAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchFinancialAccountJsonPatchRequest": {
        "name": "PatchFinancialAccountJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchFinancialAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchFinancialAccountJsonPatchQueryRequest": {
        "name": "PatchFinancialAccountJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchFinancialAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200FinancialAccount_PatchJsonReply": {
        "name": "200FinancialAccount_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200FinancialAccount_PatchMergePatchReply": {
        "name": "200FinancialAccount_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200FinancialAccount_PatchJsonPatchReply": {
        "name": "200FinancialAccount_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/FinancialAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinancialAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200FinancialAccount_PatchJsonPatchQueryReply": {
        "name": "200FinancialAccount_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/FinancialAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FinancialAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteFinancialAccountRequest": {
        "name": "DeleteFinancialAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteFinancialAccountRequestParametersHeader"
            }
          ]
        }
      },
      "ListPartyAccountRequest": {
        "name": "ListPartyAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListPartyAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200PartyAccountArrayJsonReply": {
        "name": "200PartyAccountArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/PartyAccount"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreatePartyAccountJsonRequest": {
        "name": "CreatePartyAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreatePartyAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201PartyAccountJsonReply": {
        "name": "201PartyAccountJsonReply",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrievePartyAccountRequest": {
        "name": "RetrievePartyAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrievePartyAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200PartyAccount_GetJsonReply": {
        "name": "200PartyAccount_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchPartyAccountJsonRequest": {
        "name": "PatchPartyAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchPartyAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchPartyAccountMergePatchRequest": {
        "name": "PatchPartyAccountMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchPartyAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchPartyAccountJsonPatchRequest": {
        "name": "PatchPartyAccountJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchPartyAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchPartyAccountJsonPatchQueryRequest": {
        "name": "PatchPartyAccountJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchPartyAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200PartyAccount_PatchJsonReply": {
        "name": "200PartyAccount_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200PartyAccount_PatchMergePatchReply": {
        "name": "200PartyAccount_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/PartyAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200PartyAccount_PatchJsonPatchReply": {
        "name": "200PartyAccount_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PartyAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PartyAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200PartyAccount_PatchJsonPatchQueryReply": {
        "name": "200PartyAccount_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PartyAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PartyAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeletePartyAccountRequest": {
        "name": "DeletePartyAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeletePartyAccountRequestParametersHeader"
            }
          ]
        }
      },
      "ListSettlementAccountRequest": {
        "name": "ListSettlementAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/ListSettlementAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200SettlementAccountArrayJsonReply": {
        "name": "200SettlementAccountArrayJsonReply",
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/SettlementAccount"
          }
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/XTotalCountHeader"
            },
            {
              "$ref": "#/components/schemas/XResultCountHeader"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "CreateSettlementAccountJsonRequest": {
        "name": "CreateSettlementAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount_FVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/CreateSettlementAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "201SettlementAccountJsonReply": {
        "name": "201SettlementAccountJsonReply",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode201Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "RetrieveSettlementAccountRequest": {
        "name": "RetrieveSettlementAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/RetrieveSettlementAccountRequestParametersHeader"
            },
            {
              "$ref": "#/components/schemas/QueryFiltersHeader"
            }
          ]
        }
      },
      "200SettlementAccount_GetJsonReply": {
        "name": "200SettlementAccount_GetJsonReply",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchSettlementAccountJsonRequest": {
        "name": "PatchSettlementAccountJsonRequest",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchSettlementAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json"
      },
      "PatchSettlementAccountMergePatchRequest": {
        "name": "PatchSettlementAccountMergePatchRequest",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount_MVO"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchSettlementAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "PatchSettlementAccountJsonPatchRequest": {
        "name": "PatchSettlementAccountJsonPatchRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchSettlementAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "PatchSettlementAccountJsonPatchQueryRequest": {
        "name": "PatchSettlementAccountJsonPatchQueryRequest",
        "payload": {
          "$ref": "#/components/schemas/JsonPatchOperations"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/PatchSettlementAccountRequestParametersHeader"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "200SettlementAccount_PatchJsonReply": {
        "name": "200SettlementAccount_PatchJsonReply",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json"
      },
      "200SettlementAccount_PatchMergePatchReply": {
        "name": "200SettlementAccount_PatchMergePatchReply",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccount"
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/merge-patch+json"
      },
      "200SettlementAccount_PatchJsonPatchReply": {
        "name": "200SettlementAccount_PatchJsonPatchReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/SettlementAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SettlementAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch+json"
      },
      "200SettlementAccount_PatchJsonPatchQueryReply": {
        "name": "200SettlementAccount_PatchJsonPatchQueryReply",
        "payload": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/SettlementAccount"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SettlementAccount"
              }
            },
            {
              "type": "string",
              "nullable": true
            }
          ]
        },
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/CorrelationHeader"
            },
            {
              "$ref": "#/components/schemas/StatusCode200Header"
            },
            {
              "$ref": "#/components/schemas/RequestChannel"
            }
          ]
        },
        "contentType": "application/json-patch-query+json"
      },
      "DeleteSettlementAccountRequest": {
        "name": "DeleteSettlementAccountRequest",
        "headers": {
          "allOf": [
            {
              "$ref": "#/components/schemas/RequestHeaders"
            },
            {
              "$ref": "#/components/schemas/DeleteSettlementAccountRequestParametersHeader"
            }
          ]
        }
      },
      "BillFormatNotification": {
        "name": "BillFormatNotification",
        "payload": {
          "$ref": "#/components/schemas/BillFormatNotificationPayload"
        }
      },
      "BillPresentationMediaNotification": {
        "name": "BillPresentationMediaNotification",
        "payload": {
          "$ref": "#/components/schemas/BillPresentationMediaNotificationPayload"
        }
      },
      "BillingAccountNotification": {
        "name": "BillingAccountNotification",
        "payload": {
          "$ref": "#/components/schemas/BillingAccountNotificationPayload"
        }
      },
      "BillingCycleSpecificationNotification": {
        "name": "BillingCycleSpecificationNotification",
        "payload": {
          "$ref": "#/components/schemas/BillingCycleSpecificationNotificationPayload"
        }
      },
      "FinancialAccountNotification": {
        "name": "FinancialAccountNotification",
        "payload": {
          "$ref": "#/components/schemas/FinancialAccountNotificationPayload"
        }
      },
      "PartyAccountNotification": {
        "name": "PartyAccountNotification",
        "payload": {
          "$ref": "#/components/schemas/PartyAccountNotificationPayload"
        }
      },
      "SettlementAccountNotification": {
        "name": "SettlementAccountNotification",
        "payload": {
          "$ref": "#/components/schemas/SettlementAccountNotificationPayload"
        }
      }
    }
  },
  "defaultContentType": "application/json"
}